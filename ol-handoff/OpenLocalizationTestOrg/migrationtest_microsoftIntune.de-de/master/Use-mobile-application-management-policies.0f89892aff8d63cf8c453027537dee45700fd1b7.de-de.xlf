<?xml version="1.0" encoding="utf-8"?>
<xliff srcLang="en-US" trgLang="de-de" version="2.0" xmlns="urn:oasis:names:tc:xliff:document:2.0" xmlns:mda="urn:oasis:names:tc:xliff:metadata:2.0">
  <file id="1">
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="oltranslationpriority">
        </mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <mda:metadata>
      <mda:metaGroup>
        <mda:meta type="olfilehash">08f7fc42b44fccc386b0e268dd1beac96298fab4</mda:meta>
      </mda:metaGroup>
    </mda:metadata>
    <group id="content">
      <unit id="101">
        <segment state="initial">
          <source>Use mobile application management policies</source>
          <target>Use mobile application management policies</target>
        </segment>
      </unit>
      <unit id="102">
        <segment state="initial">
          <source>Use mobile application management policies</source>
          <target>Use mobile application management policies</target>
        </segment>
      </unit>
      <unit id="103">
        <segment state="initial">
          <source>Welcome to CAPS Markdown Editor!</source>
          <target>Welcome to CAPS Markdown Editor!</target>
        </segment>
      </unit>
      <unit id="104">
        <segment state="initial">
          <source>CAPS is using GitHub Flavored Markdown(GFM) which is one of the most popular Markdown flavor.</source>
          <target>CAPS is using GitHub Flavored Markdown(GFM) which is one of the most popular Markdown flavor.</target>
        </segment>
      </unit>
      <unit id="105">
        <segment state="initial">
          <source>Lets' learn how to make your customized document with below rules.</source>
          <target>Lets' learn how to make your customized document with below rules.</target>
        </segment>
      </unit>
      <unit id="106">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://help.github.com/articles/markdown-basics/)</data>
        </originalData>
        <segment state="initial">
          <source>View the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Markdown Basics</pc></source>
          <target>View the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Markdown Basics</pc></target>
        </segment>
      </unit>
      <unit id="107">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://help.github.com/articles/github-flavored-markdown/)</data>
        </originalData>
        <segment state="initial">
          <source>View the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Github Flavored Markdown</pc></source>
          <target>View the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Github Flavored Markdown</pc></target>
        </segment>
      </unit>
      <unit id="108">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](http://github.github.com/github-flavored-markdown/sample_content.html)</data>
        </originalData>
        <segment state="initial">
          <source>View the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Online sample</pc>.</source>
          <target>View the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Online sample</pc>.</target>
        </segment>
      </unit>
      <unit id="109">
        <segment state="initial">
          <source>Quick Guidance</source>
          <target>Quick Guidance</target>
        </segment>
      </unit>
      <unit id="110">
        <segment state="initial">
          <source>When you are authoring your Markdown content in CAPS, you could get help from different ways:</source>
          <target>When you are authoring your Markdown content in CAPS, you could get help from different ways:</target>
        </segment>
      </unit>
      <unit id="111">
        <originalData>
          <data id="id1">`Alt + F1`</data>
          <data id="id2">`F1`</data>
          <data id="id3">`Command Palette`</data>
        </originalData>
        <segment state="initial">
          <source>Use <ph dataRef="id1" id="ph1" /> in IE or <ph dataRef="id2" id="ph2" /> in Chrome to open <ph dataRef="id3" id="ph3" /></source>
          <target>Use <ph dataRef="id1" id="ph1" /> in IE or <ph dataRef="id2" id="ph2" /> in Chrome to open <ph dataRef="id3" id="ph3" /></target>
        </segment>
      </unit>
      <unit id="112">
        <originalData>
          <data id="id1">`Ctrl + space`</data>
        </originalData>
        <segment state="initial">
          <source>Use <ph dataRef="id1" id="ph1" /> at any place to open insert.</source>
          <target>Use <ph dataRef="id1" id="ph1" /> at any place to open insert.</target>
        </segment>
      </unit>
      <unit id="113">
        <segment state="initial">
          <source>Use authoring tool bar on the top of the editor to help create your content</source>
          <target>Use authoring tool bar on the top of the editor to help create your content</target>
        </segment>
      </unit>
      <unit id="114">
        <segment state="initial">
          <source>Format your content</source>
          <target>Format your content</target>
        </segment>
      </unit>
      <unit id="115">
        <segment state="initial">
          <source>Paragraph</source>
          <target>Paragraph</target>
        </segment>
      </unit>
      <unit id="116">
        <segment state="initial">
          <source>Paragraphs in Markdown are just one or more lines of consecutive text followed by one or more blank lines.</source>
          <target>Paragraphs in Markdown are just one or more lines of consecutive text followed by one or more blank lines.</target>
        </segment>
      </unit>
      <unit id="117">
        <segment state="initial">
          <source>Headings</source>
          <target>Headings</target>
        </segment>
      </unit>
      <unit id="118">
        <segment state="initial">
          <source>You can either you header dropdown list provided in the authoring toolbar, or manually add '---' or '===' in the     next line under your section title.</source>
          <target>You can either you header dropdown list provided in the authoring toolbar, or manually add '---' or '===' in the     next line under your section title.</target>
        </segment>
      </unit>
      <unit id="119">
        <originalData>
          <data id="id1">`#`</data>
        </originalData>
        <segment state="initial">
          <source>You can also create a heading by adding one or more <ph dataRef="id1" id="ph1" /> symbols before your     heading text.</source>
          <target>You can also create a heading by adding one or more <ph dataRef="id1" id="ph1" /> symbols before your     heading text.</target>
        </segment>
      </unit>
      <unit id="120">
        <originalData>
          <data id="id1">`#`</data>
        </originalData>
        <segment state="initial">
          <source>The number of <ph dataRef="id1" id="ph1" /> you use will determine the size of the heading.</source>
          <target>The number of <ph dataRef="id1" id="ph1" /> you use will determine the size of the heading.</target>
        </segment>
      </unit>
      <unit id="121">
        <segment state="initial">
          <source>Block quotes</source>
          <target>Block quotes</target>
        </segment>
      </unit>
      <unit id="122">
        <originalData>
          <data id="id1">`&gt;`</data>
        </originalData>
        <segment state="initial">
          <source>You can indicate block quotes with a <ph dataRef="id1" id="ph1" />.</source>
          <target>You can indicate block quotes with a <ph dataRef="id1" id="ph1" />.</target>
        </segment>
      </unit>
      <unit id="123">
        <segment state="initial">
          <source>Styling text</source>
          <target>Styling text</target>
        </segment>
      </unit>
      <unit id="124">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">*</data>
          <data id="id4">*</data>
        </originalData>
        <segment state="initial">
          <source>You can make your text <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Bold</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">italic</pc></source>
          <target>You can make your text <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Bold</pc> or <pc dataRefEnd="id4" dataRefStart="id3" id="p2">italic</pc></target>
        </segment>
      </unit>
      <unit id="125">
        <segment state="initial">
          <source>You can also use authoring toolbar to achieve this</source>
          <target>You can also use authoring toolbar to achieve this</target>
        </segment>
      </unit>
      <unit id="126">
        <segment state="initial">
          <source>Lists</source>
          <target>Lists</target>
        </segment>
      </unit>
      <unit id="127">
        <originalData>
          <data id="id1">`*`</data>
          <data id="id2">`-`</data>
        </originalData>
        <segment state="initial">
          <source>You can add an unordered list by preceding list items with <ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" /></source>
          <target>You can add an unordered list by preceding list items with <ph dataRef="id1" id="ph1" /> or <ph dataRef="id2" id="ph2" /></target>
        </segment>
      </unit>
      <unit id="128">
        <segment state="initial">
          <source>You can add ordered list by preceding list items with a number</source>
          <target>You can add ordered list by preceding list items with a number</target>
        </segment>
      </unit>
      <unit id="129">
        <segment state="initial">
          <source>You can create nested lists by indenting list items by two spaces.</source>
          <target>You can create nested lists by indenting list items by two spaces.</target>
        </segment>
      </unit>
      <unit id="130">
        <segment state="initial">
          <source>You can also use authoring toolbar to achieve this</source>
          <target>You can also use authoring toolbar to achieve this</target>
        </segment>
      </unit>
      <unit id="131">
        <segment state="initial">
          <source>Code formatting</source>
          <target>Code formatting</target>
        </segment>
      </unit>
      <unit id="132">
        <segment state="initial">
          <source>You can use triple ticks (```) to format text as its own distinct block.</source>
          <target>You can use triple ticks (```) to format text as its own distinct block.</target>
        </segment>
      </unit>
      <unit id="133">
        <segment state="initial">
          <source>Check out this neat program I wrote:</source>
          <target>Check out this neat program I wrote:</target>
        </segment>
      </unit>
      <unit id="134">
        <segment state="initial">
          <source>Add Reference to your content</source>
          <target>Add Reference to your content</target>
        </segment>
      </unit>
      <unit id="135">
        <segment state="initial">
          <source>Insert Links</source>
          <target>Insert Links</target>
        </segment>
      </unit>
      <unit id="136">
        <originalData>
          <data id="id1">`[Link Label]`</data>
          <data id="id2">`(http://URL)`</data>
        </originalData>
        <segment state="initial">
          <source>You can create an inline link by wrapping link text in brackets <ph dataRef="id1" id="ph1" />, and then wrapping the link in    parentheses <ph dataRef="id2" id="ph2" />.</source>
          <target>You can create an inline link by wrapping link text in brackets <ph dataRef="id1" id="ph1" />, and then wrapping the link in    parentheses <ph dataRef="id2" id="ph2" />.</target>
        </segment>
      </unit>
      <unit id="137">
        <segment state="initial">
          <source>Bing.com</source>
          <target>Bing.com</target>
        </segment>
      </unit>
      <unit id="138">
        <segment state="initial">
          <source>You can also create a link to an existing topic in CAPS with the authoring toolbar</source>
          <target>You can also create a link to an existing topic in CAPS with the authoring toolbar</target>
        </segment>
      </unit>
      <unit id="139">
        <segment state="initial">
          <source>Insert Image</source>
          <target>Insert Image</target>
        </segment>
      </unit>
      <unit id="140">
        <originalData>
          <data id="id1">`![Image Label]`</data>
          <data id="id2">`(http://ImageURL)`</data>
        </originalData>
        <segment state="initial">
          <source>You can reference a online image from external resource by using <ph dataRef="id1" id="ph1" />, and then wrapping the image resource url in parentheses <ph dataRef="id2" id="ph2" /></source>
          <target>You can reference a online image from external resource by using <ph dataRef="id1" id="ph1" />, and then wrapping the image resource url in parentheses <ph dataRef="id2" id="ph2" /></target>
        </segment>
      </unit>
      <unit id="141">
        <segment state="initial">
          <source>You can also insert an image from CAPS with the authoring toolbar</source>
          <target>You can also insert an image from CAPS with the authoring toolbar</target>
        </segment>
      </unit>
      <unit id="142">
        <segment state="initial">
          <source>Using tables in your content</source>
          <target>Using tables in your content</target>
        </segment>
      </unit>
      <unit id="143">
        <segment state="initial">
          <source>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</source>
          <target>You can create tables by assembling a list of words and dividing them with hyphens - (for the first row), and then separating each column with a pipe |:</target>
        </segment>
      </unit>
      <unit id="144">
        <segment state="initial">
          <source>First Header</source>
          <target>First Header</target>
        </segment>
      </unit>
      <unit id="145">
        <segment state="initial">
          <source>Second Header</source>
          <target>Second Header</target>
        </segment>
      </unit>
      <unit id="146">
        <segment state="initial">
          <source>Content Cell</source>
          <target>Content Cell</target>
        </segment>
      </unit>
      <unit id="147">
        <segment state="initial">
          <source>Content Cell</source>
          <target>Content Cell</target>
        </segment>
      </unit>
      <unit id="148">
        <segment state="initial">
          <source>Content Cell</source>
          <target>Content Cell</target>
        </segment>
      </unit>
      <unit id="149">
        <segment state="initial">
          <source>Content Cell</source>
          <target>Content Cell</target>
        </segment>
      </unit>
      <unit id="150">
        <segment state="initial">
          <source>You can also include inline Markdown format syntax such as links, bold, italics, or strike through:</source>
          <target>You can also include inline Markdown format syntax such as links, bold, italics, or strike through:</target>
        </segment>
      </unit>
      <unit id="151">
        <segment state="initial">
          <source>Name</source>
          <target>Name</target>
        </segment>
      </unit>
      <unit id="152">
        <segment state="initial">
          <source>Description</source>
          <target>Description</target>
        </segment>
      </unit>
      <unit id="153">
        <segment state="initial">
          <source>Help</source>
          <target>Help</target>
        </segment>
      </unit>
      <unit id="154">
        <originalData>
          <data id="id1">~~</data>
          <data id="id2">~~</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Display the</pc> help window.</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Display the</pc> help window.</target>
        </segment>
      </unit>
      <unit id="155">
        <segment state="initial">
          <source>Close</source>
          <target>Close</target>
        </segment>
      </unit>
      <unit id="156">
        <originalData>
          <data id="id1">_</data>
          <data id="id2">_</data>
        </originalData>
        <segment state="initial">
          <source>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Closes</pc> a window</source>
          <target>
            <pc dataRefEnd="id2" dataRefStart="id1" id="p1">Closes</pc> a window</target>
        </segment>
      </unit>
      <unit id="157">
        <segment state="initial">
          <source>You can have more formatting control by including colons : within the header row, you can define text to be left-aligned, right-aligned, or center-aligned:</source>
          <target>You can have more formatting control by including colons : within the header row, you can define text to be left-aligned, right-aligned, or center-aligned:</target>
        </segment>
      </unit>
      <unit id="158">
        <segment state="initial">
          <source>Left-Aligned</source>
          <target>Left-Aligned</target>
        </segment>
      </unit>
      <unit id="159">
        <segment state="initial">
          <source>Center Aligned</source>
          <target>Center Aligned</target>
        </segment>
      </unit>
      <unit id="160">
        <segment state="initial">
          <source>Right Aligned</source>
          <target>Right Aligned</target>
        </segment>
      </unit>
      <unit id="161">
        <segment state="initial">
          <source>col 3 is</source>
          <target>col 3 is</target>
        </segment>
      </unit>
      <unit id="162">
        <segment state="initial">
          <source>some wordy text</source>
          <target>some wordy text</target>
        </segment>
      </unit>
      <unit id="163">
        <segment state="initial">
          <source>$1600</source>
          <target>$1600</target>
        </segment>
      </unit>
      <unit id="164">
        <segment state="initial">
          <source>col 2 is</source>
          <target>col 2 is</target>
        </segment>
      </unit>
      <unit id="165">
        <segment state="initial">
          <source>centered</source>
          <target>centered</target>
        </segment>
      </unit>
      <unit id="166">
        <segment state="initial">
          <source>$12</source>
          <target>$12</target>
        </segment>
      </unit>
      <unit id="167">
        <segment state="initial">
          <source>zebra stripes</source>
          <target>zebra stripes</target>
        </segment>
      </unit>
      <unit id="168">
        <segment state="initial">
          <source>are neat</source>
          <target>are neat</target>
        </segment>
      </unit>
      <unit id="169">
        <segment state="initial">
          <source>$1</source>
          <target>$1</target>
        </segment>
      </unit>
      <unit id="170">
        <originalData>
          <data id="id1">**</data>
          <data id="id2">**</data>
          <data id="id3">**</data>
          <data id="id4">**</data>
          <data id="id5">**</data>
          <data id="id6">**</data>
        </originalData>
        <segment state="initial">
          <source>A colon on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">left-most</pc> side indicates a left-aligned column; a colon on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">right-most</pc> side indicates a right-aligned column; a colon on <pc dataRefEnd="id6" dataRefStart="id5" id="p3">both</pc> sides indicates a center-aligned column.</source>
          <target>A colon on the <pc dataRefEnd="id2" dataRefStart="id1" id="p1">left-most</pc> side indicates a left-aligned column; a colon on the <pc dataRefEnd="id4" dataRefStart="id3" id="p2">right-most</pc> side indicates a right-aligned column; a colon on <pc dataRefEnd="id6" dataRefStart="id5" id="p3">both</pc> sides indicates a center-aligned column.</target>
        </segment>
      </unit>
      <unit id="171">
        <segment state="initial">
          <source>HTML</source>
          <target>HTML</target>
        </segment>
      </unit>
      <unit id="172">
        <segment state="initial">
          <source>You can use a subset of HTML within your content.</source>
          <target>You can use a subset of HTML within your content.</target>
        </segment>
      </unit>
      <unit id="173">
        <originalData>
          <data id="id1">[</data>
          <data id="id2">](https://github.com/github/markup/tree/master#html-sanitization)</data>
        </originalData>
        <segment state="initial">
          <source>A full list of our supported tags and attributes can be found <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc></source>
          <target>A full list of our supported tags and attributes can be found <pc dataRefEnd="id2" dataRefStart="id1" id="p1">here</pc></target>
        </segment>
      </unit>
    </group>
  </file>
</xliff>